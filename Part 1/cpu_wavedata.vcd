$date
	Thu Jun 15 21:46:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 8 ! WRITEDATA [7:0] $end
$var wire 1 " WRITE $end
$var wire 8 # READDATA [7:0] $end
$var wire 1 $ READ $end
$var wire 32 % PC [31:0] $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 ' BUSYWAIT $end
$var wire 8 ( ADDRESS [7:0] $end
$var reg 1 ) CLK $end
$var reg 1 * RESET $end
$scope module mycpu $end
$var wire 8 + ADDRESS [7:0] $end
$var wire 1 ) CLK $end
$var wire 32 , INSTRUCTION [31:0] $end
$var wire 8 - OFFSET [7:0] $end
$var wire 1 * RESET $end
$var wire 8 . WRITEDATA [7:0] $end
$var wire 8 / registerOp [7:0] $end
$var wire 8 0 out_multi [7:0] $end
$var wire 32 1 offset_out [31:0] $end
$var wire 8 2 negatedOp [7:0] $end
$var wire 8 3 in2_multi [7:0] $end
$var wire 8 4 in1_multi [7:0] $end
$var wire 1 5 flow_out $end
$var wire 1 6 ZERO $end
$var wire 3 7 WRITEREG [2:0] $end
$var wire 4 8 Shift [3:0] $end
$var wire 8 9 REGOUT2 [7:0] $end
$var wire 8 : REGOUT1 [7:0] $end
$var wire 3 ; READREG2 [2:0] $end
$var wire 3 < READREG1 [2:0] $end
$var wire 8 = READDATA [7:0] $end
$var wire 8 > OPERAND2 [7:0] $end
$var wire 32 ? NewPC [31:0] $end
$var wire 8 @ MUX5 [7:0] $end
$var wire 8 A IMMEDIATE [7:0] $end
$var wire 1 ' BUSYWAIT $end
$var wire 8 B ALURESULT [7:0] $end
$var reg 3 C ALUOP [2:0] $end
$var reg 8 D OPCODE [7:0] $end
$var reg 32 E PC [31:0] $end
$var reg 32 F PCreg [31:0] $end
$var reg 1 $ READMEM $end
$var reg 1 G SEL_MUX4 $end
$var reg 1 H Shift_Choice $end
$var reg 1 I WRITEENABLE $end
$var reg 1 " WRITEMEM $end
$var reg 2 J bj [1:0] $end
$var reg 1 K immSelect $end
$var reg 1 L signSelect $end
$scope module MUX4 $end
$var wire 32 M IN1 [31:0] $end
$var wire 1 5 SELECT $end
$var wire 32 N IN2 [31:0] $end
$var reg 32 O OUT [31:0] $end
$upscope $end
$scope module alu1 $end
$var wire 1 H CHOICE $end
$var wire 3 P SELECT [2:0] $end
$var wire 4 Q SHIFT [3:0] $end
$var wire 1 6 ZERO $end
$var wire 8 R DATA2 [7:0] $end
$var wire 8 S DATA1 [7:0] $end
$var wire 8 T C7 [7:0] $end
$var wire 8 U C6 [7:0] $end
$var wire 8 V C5 [7:0] $end
$var wire 8 W C4 [7:0] $end
$var wire 8 X C3 [7:0] $end
$var wire 8 Y C2 [7:0] $end
$var wire 8 Z C1 [7:0] $end
$var wire 8 [ C0 [7:0] $end
$var reg 8 \ RESULT [7:0] $end
$scope module case0 $end
$var wire 8 ] RESULT [7:0] $end
$var wire 8 ^ DATA2 [7:0] $end
$var wire 8 _ DATA1 [7:0] $end
$upscope $end
$scope module case1 $end
$var wire 8 ` RESULT [7:0] $end
$var wire 8 a DATA2 [7:0] $end
$var wire 8 b DATA1 [7:0] $end
$upscope $end
$scope module case2 $end
$var wire 8 c RESULT [7:0] $end
$var wire 8 d DATA2 [7:0] $end
$var wire 8 e DATA1 [7:0] $end
$upscope $end
$scope module case3 $end
$var wire 8 f RESULT [7:0] $end
$var wire 8 g DATA2 [7:0] $end
$var wire 8 h DATA1 [7:0] $end
$upscope $end
$scope module case4 $end
$var wire 8 i New_Num [7:0] $end
$var wire 8 j IN2 [7:0] $end
$var wire 8 k IN1 [7:0] $end
$var reg 8 l sum [7:0] $end
$upscope $end
$scope module case5 $end
$var wire 8 m Out_num [7:0] $end
$var wire 4 n SHIFT [3:0] $end
$var wire 8 o Number [7:0] $end
$var reg 8 p New_Num [7:0] $end
$upscope $end
$scope module case6 $end
$var wire 8 q Out_num [7:0] $end
$var wire 4 r SHIFT [3:0] $end
$var wire 8 s Number [7:0] $end
$var reg 8 t New_Num [7:0] $end
$upscope $end
$scope module case7 $end
$var wire 1 H Chocie $end
$var wire 8 u Out_num [7:0] $end
$var wire 4 v SHIFT [3:0] $end
$var wire 8 w Number [7:0] $end
$var reg 8 x New_Num [7:0] $end
$upscope $end
$upscope $end
$scope module flow $end
$var wire 2 y branch_jump [1:0] $end
$var wire 1 5 out $end
$var wire 1 6 zero $end
$upscope $end
$scope module mult $end
$var wire 8 z IN1 [7:0] $end
$var wire 8 { IN2 [7:0] $end
$var wire 8 | New_Num [7:0] $end
$var reg 8 } sum [7:0] $end
$upscope $end
$scope module mux1 $end
$var wire 1 L SELECT $end
$var wire 8 ~ IN2 [7:0] $end
$var wire 8 !" IN1 [7:0] $end
$var reg 8 "" OUT [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 #" IN1 [7:0] $end
$var wire 8 $" IN2 [7:0] $end
$var wire 1 K SELECT $end
$var reg 8 %" OUT [7:0] $end
$upscope $end
$scope module mux4 $end
$var wire 8 &" IN1 [7:0] $end
$var wire 1 G SELECT $end
$var wire 8 '" IN2 [7:0] $end
$var reg 8 (" OUT [7:0] $end
$upscope $end
$scope module reg_file1 $end
$var wire 1 ) CLK $end
$var wire 8 )" IN [7:0] $end
$var wire 3 *" INADDRESS [2:0] $end
$var wire 8 +" OUT1 [7:0] $end
$var wire 3 ," OUT1ADDRESS [2:0] $end
$var wire 8 -" OUT2 [7:0] $end
$var wire 3 ." OUT2ADDRESS [2:0] $end
$var wire 1 * RESET $end
$var wire 1 I WRITE $end
$var integer 32 /" i [31:0] $end
$upscope $end
$scope module target $end
$var wire 8 0" Offset [7:0] $end
$var wire 32 1" PC [31:0] $end
$var wire 22 2" signBits [21:0] $end
$var wire 32 3" Target [31:0] $end
$upscope $end
$scope module twocomp1 $end
$var wire 8 4" IN [7:0] $end
$var wire 8 5" OUT [7:0] $end
$upscope $end
$upscope $end
$scope module mydmem $end
$var wire 8 6" address [7:0] $end
$var wire 1 ) clock $end
$var wire 1 $ read $end
$var wire 1 * reset $end
$var wire 1 " write $end
$var wire 8 7" writedata [7:0] $end
$var reg 1 ' busywait $end
$var reg 1 8" readaccess $end
$var reg 8 9" readdata [7:0] $end
$var reg 1 :" writeaccess $end
$var integer 32 ;" i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000 ;"
0:"
bx 9"
08"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bz 2"
bx 1"
bz 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
xL
xK
bx J
xI
0H
0G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bz -
bx ,
bx +
1*
0)
bx (
0'
bx &
bx %
0$
bx #
0"
bx !
$end
#4
b0 /"
1)
#5
b0 ?
b0 O
b1 /"
b0 F
b0 M
b0 1"
b0 %
b0 E
0*
#6
b100 ?
b100 O
b100 F
b100 M
b100 1"
b10 /"
#7
b0 <
b0 ,"
b100 ;
b100 ."
b10 7
b10 *"
b100 8
b100 Q
b100 n
b100 r
b100 v
b0 D
b100 A
b100 $"
b100 3
b100 {
b0 4
b0 z
b11 /"
b100000000000000100 &
b100000000000000100 ,
#8
05
b100 >
b100 R
b100 ^
b100 a
b100 d
b100 g
b100 j
b100 %"
bx0000 T
bx0000 u
bx0000 x
b0 J
b0 y
1I
0L
1K
b0 C
b0 P
b100 /"
0)
#9
06
b100 @
b100 ("
b100 (
b100 +
b100 6"
b100 B
b100 \
b100 &"
b100 )"
bx1xx X
bx1xx f
b0x00 Y
b0x00 c
b100 [
b100 ]
b101 /"
b0 !
b0 .
b0 7"
b0 :
b0 S
b0 _
b0 b
b0 e
b0 h
b0 k
b0 o
b0 s
b0 w
b0 +"
b0 0
b0 |
b0 }
#10
b100 X
b100 f
b0 Y
b0 c
b0 V
b0 m
b0 p
b0 U
b0 q
b0 t
b0 T
b0 u
b0 x
b110 /"
b0 W
b0 i
b0 l
#11
b0 /
b0 ""
b0 #"
b111 /"
b0 9
b0 !"
b0 -"
b0 4"
b100 Z
b100 `
#12
b0 2
b0 ~
b0 5"
b1000 /"
1)
#13
b100 %
b100 E
#14
b1000 ?
b1000 O
b1000 F
b1000 M
b1000 1"
#15
b101 >
b101 R
b101 ^
b101 a
b101 d
b101 g
b101 j
b101 %"
b101 ;
b101 ."
b11 7
b11 *"
b101 8
b101 Q
b101 n
b101 r
b101 v
b101 A
b101 $"
b101 3
b101 {
b110000000000000101 &
b110000000000000101 ,
#16
b101 @
b101 ("
b101 (
b101 +
b101 6"
b101 B
b101 \
b101 &"
b101 )"
b101 X
b101 f
b101 [
b101 ]
0)
#17
b101 Z
b101 `
#20
1)
#21
b1000 %
b1000 E
#22
b1100 ?
b1100 O
b1100 F
b1100 M
b1100 1"
#23
b1 >
b1 R
b1 ^
b1 a
b1 d
b1 g
b1 j
b1 %"
b1 ;
b1 ."
b100 7
b100 *"
b1 8
b1 Q
b1 n
b1 r
b1 v
b1 A
b1 $"
b1 3
b1 {
b1000000000000000001 &
b1000000000000000001 ,
#24
b1 @
b1 ("
b1 (
b1 +
b1 6"
b1 B
b1 \
b1 &"
b1 )"
b1 X
b1 f
b1 [
b1 ]
0)
#25
b1 Z
b1 `
#28
1)
#29
b1100 %
b1100 E
#30
b10000 ?
b10000 O
b10000 F
b10000 M
b10000 1"
#31
b10 <
b10 ,"
b0 7
b0 *"
b10000 D
b10 4
b10 z
b10000000000000000001000000001 &
b10000000000000000001000000001 ,
#32
1:"
1'
b0 >
b0 R
b0 ^
b0 a
b0 d
b0 g
b0 j
b0 %"
1"
0K
0)
#33
16
b0 @
b0 ("
b0 (
b0 +
b0 6"
b0 B
b0 \
b0 &"
b0 )"
b0 X
b0 f
b0 [
b0 ]
b10 0
b10 |
b10 }
#34
b0 Z
b0 `
#36
1)
#40
0)
#44
1)
#48
0)
#52
1)
#56
0)
#60
1)
#64
0)
#68
1)
#72
0)
#76
0"
1)
0:"
0'
#77
b10000 %
b10000 E
#78
b10100 ?
b10100 O
b10100 F
b10100 M
b10100 1"
#79
b10 ;
b10 ."
b10 8
b10 Q
b10 n
b10 r
b10 v
b10 A
b10 $"
b10 3
b10 {
b10000000000000000001000000010 &
b10000000000000000001000000010 ,
#80
1:"
1'
1"
0)
#81
b100 0
b100 |
b100 }
#84
1)
#88
0)
#92
1)
#96
0)
#100
1)
#104
0)
#108
1)
#112
0)
#116
1)
#120
0)
#124
0"
1)
0:"
0'
#125
b10100 %
b10100 E
#126
b11000 ?
b11000 O
b11000 F
b11000 M
b11000 1"
#127
b100 <
b100 ,"
b1 ;
b1 ."
b1 8
b1 Q
b1 n
b1 r
b1 v
b1 A
b1 $"
b1 3
b1 {
b100 4
b100 z
b10000000000000000010000000001 &
b10000000000000000010000000001 ,
#128
1:"
1'
1"
0)
#129
b1 !
b1 .
b1 7"
b1 :
b1 S
b1 _
b1 b
b1 e
b1 h
b1 k
b1 o
b1 s
b1 w
b1 +"
#130
b1 X
b1 f
b10000000 U
b10000000 q
b10000000 t
b10 T
b10 u
b10 x
#131
b1 Z
b1 `
#132
1)
#136
0)
#140
1)
#144
0)
#148
1)
#152
0)
#156
1)
#160
0)
#164
1)
#168
0)
#172
0"
1)
0:"
0'
#173
b11000 %
b11000 E
#174
b11100 ?
b11100 O
b11100 F
b11100 M
b11100 1"
#175
b0 <
b0 ,"
b100 7
b100 *"
b1110 D
b0 4
b0 z
b1110000001000000000000000001 &
b1110000001000000000000000001 ,
#176
bx @
bx ("
18"
1'
1G
1$
0)
#177
b0 !
b0 .
b0 7"
b0 :
b0 S
b0 _
b0 b
b0 e
b0 h
b0 k
b0 o
b0 s
b0 w
b0 +"
b0 0
b0 |
b0 }
#178
b0 X
b0 f
b0 U
b0 q
b0 t
b0 T
b0 u
b0 x
#179
b0 Z
b0 `
#180
1)
#184
0)
#188
1)
#192
0)
#196
1)
#200
0)
#204
1)
#208
0)
#212
1)
#216
0)
#220
0$
b1 @
b1 ("
1)
08"
0'
b1 #
b1 =
b1 '"
b1 9"
#221
b11100 %
b11100 E
#222
b100000 ?
b100000 O
b100000 F
b100000 M
b100000 1"
#223
b101 ;
b101 ."
b1 7
b1 *"
b101 8
b101 Q
b101 n
b101 r
b101 v
b1111 D
b101 A
b101 $"
b101 3
b101 {
b1111000000010000000000000101 &
b1111000000010000000000000101 ,
#224
18"
1'
b101 >
b101 R
b101 ^
b101 a
b101 d
b101 g
b101 j
b101 %"
1$
1K
0)
#225
06
b101 (
b101 +
b101 6"
b101 B
b101 \
b101 &"
b101 )"
b101 X
b101 f
b101 [
b101 ]
#226
b101 Z
b101 `
#228
1)
#232
0)
#236
1)
#240
0)
#244
1)
#248
0)
#252
1)
#256
0)
#260
1)
#264
0)
#268
0$
b0 @
b0 ("
1)
08"
0'
b0 #
b0 =
b0 '"
b0 9"
#269
b100000 %
b100000 E
#270
b100100 ?
b100100 O
b100100 F
b100100 M
b100100 1"
#271
b11 7
b11 *"
b1111000000110000000000000101 &
b1111000000110000000000000101 ,
#272
18"
1'
1$
0)
#276
1)
#280
0)
#284
1)
#288
0)
#292
1)
#296
0)
#300
1)
#304
0)
#308
1)
#312
0)
#316
0$
1)
08"
0'
#317
b100100 %
b100100 E
#318
b101000 ?
b101000 O
b101000 F
b101000 M
b101000 1"
#319
bx <
bx ,"
bx >
bx R
bx ^
bx a
bx d
bx g
bx j
bx %"
bx ;
bx ."
bx 7
bx *"
bx 8
bx Q
bx n
bx r
bx v
bx D
bx A
bx $"
bx 3
bx {
bx 4
bx z
bx &
bx ,
#320
x6
bx (
bx +
bx 6"
bx B
bx \
bx &"
bx )"
bx X
bx f
bx [
bx ]
0)
#321
bx /
bx ""
bx #"
bx W
bx i
bx l
bx !
bx .
bx 7"
bx :
bx S
bx _
bx b
bx e
bx h
bx k
bx o
bx s
bx w
bx +"
bx Z
bx `
bx 9
bx !"
bx -"
bx 4"
bx 0
bx |
bx }
#322
bx Y
bx c
bx V
bx m
bx p
bx 2
bx ~
bx 5"
#324
1)
#325
b101000 %
b101000 E
#326
b101100 ?
b101100 O
b101100 F
b101100 M
b101100 1"
#328
0)
#332
1)
#333
b101100 %
b101100 E
#334
b110000 ?
b110000 O
b110000 F
b110000 M
b110000 1"
#336
0)
#340
1)
#341
b110000 %
b110000 E
#342
b110100 ?
b110100 O
b110100 F
b110100 M
b110100 1"
#344
0)
#348
1)
#349
b110100 %
b110100 E
#350
b111000 ?
b111000 O
b111000 F
b111000 M
b111000 1"
#352
0)
#356
1)
#357
b111000 %
b111000 E
#358
b111100 ?
b111100 O
b111100 F
b111100 M
b111100 1"
#360
0)
#364
1)
#365
b111100 %
b111100 E
#366
b1000000 ?
b1000000 O
b1000000 F
b1000000 M
b1000000 1"
#368
0)
#372
1)
#373
b1000000 %
b1000000 E
#374
b1000100 ?
b1000100 O
b1000100 F
b1000100 M
b1000100 1"
#376
0)
#380
1)
#381
b1000100 %
b1000100 E
#382
b1001000 ?
b1001000 O
b1001000 F
b1001000 M
b1001000 1"
#384
0)
#388
1)
#389
b1001000 %
b1001000 E
#390
b1001100 ?
b1001100 O
b1001100 F
b1001100 M
b1001100 1"
#392
0)
#396
1)
#397
b1001100 %
b1001100 E
#398
b1010000 ?
b1010000 O
b1010000 F
b1010000 M
b1010000 1"
#400
0)
#404
1)
#405
b1010000 %
b1010000 E
#406
b1010100 ?
b1010100 O
b1010100 F
b1010100 M
b1010100 1"
#408
0)
#412
1)
#413
b1010100 %
b1010100 E
#414
b1011000 ?
b1011000 O
b1011000 F
b1011000 M
b1011000 1"
#416
0)
#420
1)
#421
b1011000 %
b1011000 E
#422
b1011100 ?
b1011100 O
b1011100 F
b1011100 M
b1011100 1"
#424
0)
#428
1)
#429
b1011100 %
b1011100 E
#430
b1100000 ?
b1100000 O
b1100000 F
b1100000 M
b1100000 1"
#432
0)
#436
1)
#437
b1100000 %
b1100000 E
#438
b1100100 ?
b1100100 O
b1100100 F
b1100100 M
b1100100 1"
#440
0)
#444
1)
#445
b1100100 %
b1100100 E
#446
b1101000 ?
b1101000 O
b1101000 F
b1101000 M
b1101000 1"
#448
0)
#452
1)
#453
b1101000 %
b1101000 E
#454
b1101100 ?
b1101100 O
b1101100 F
b1101100 M
b1101100 1"
#456
0)
#460
1)
#461
b1101100 %
b1101100 E
#462
b1110000 ?
b1110000 O
b1110000 F
b1110000 M
b1110000 1"
#464
0)
#468
1)
#469
b1110000 %
b1110000 E
#470
b1110100 ?
b1110100 O
b1110100 F
b1110100 M
b1110100 1"
#472
0)
#476
1)
#477
b1110100 %
b1110100 E
#478
b1111000 ?
b1111000 O
b1111000 F
b1111000 M
b1111000 1"
#480
0)
#484
1)
#485
b1111000 %
b1111000 E
#486
b1111100 ?
b1111100 O
b1111100 F
b1111100 M
b1111100 1"
#488
0)
#492
1)
#493
b1111100 %
b1111100 E
#494
b10000000 ?
b10000000 O
b10000000 F
b10000000 M
b10000000 1"
#496
0)
#500
1)
#501
b10000000 %
b10000000 E
#502
b10000100 ?
b10000100 O
b10000100 F
b10000100 M
b10000100 1"
#504
0)
#505
