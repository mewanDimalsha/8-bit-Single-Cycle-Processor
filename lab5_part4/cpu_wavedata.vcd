$date
	Wed Jun  7 09:55:17 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 8 & registerOp [7:0] $end
$var wire 32 ' offset_out [31:0] $end
$var wire 8 ( negatedOp [7:0] $end
$var wire 1 ) flow_out $end
$var wire 1 * ZERO $end
$var wire 3 + WRITEREG [2:0] $end
$var wire 8 , REGOUT2 [7:0] $end
$var wire 8 - REGOUT1 [7:0] $end
$var wire 3 . READREG2 [2:0] $end
$var wire 3 / READREG1 [2:0] $end
$var wire 8 0 OPERAND2 [7:0] $end
$var wire 8 1 OFFSET [7:0] $end
$var wire 32 2 NewPC [31:0] $end
$var wire 8 3 IMMEDIATE [7:0] $end
$var wire 8 4 ALURESULT [7:0] $end
$var reg 3 5 ALUOP [2:0] $end
$var reg 8 6 OPCODE [7:0] $end
$var reg 32 7 PC [31:0] $end
$var reg 32 8 PCreg [31:0] $end
$var reg 1 9 WRITEENABLE $end
$var reg 1 : branch $end
$var reg 1 ; immSelect $end
$var reg 1 < jump $end
$var reg 1 = signSelect $end
$scope module alu1 $end
$var wire 3 > SELECT [2:0] $end
$var wire 1 * ZERO $end
$var wire 8 ? DATA2 [7:0] $end
$var wire 8 @ DATA1 [7:0] $end
$var wire 8 A C3 [7:0] $end
$var wire 8 B C2 [7:0] $end
$var wire 8 C C1 [7:0] $end
$var wire 8 D C0 [7:0] $end
$var reg 8 E RESULT [7:0] $end
$scope module case0 $end
$var wire 8 F RESULT [7:0] $end
$var wire 8 G DATA2 [7:0] $end
$var wire 8 H DATA1 [7:0] $end
$upscope $end
$scope module case1 $end
$var wire 8 I RESULT [7:0] $end
$var wire 8 J DATA2 [7:0] $end
$var wire 8 K DATA1 [7:0] $end
$upscope $end
$scope module case2 $end
$var wire 8 L RESULT [7:0] $end
$var wire 8 M DATA2 [7:0] $end
$var wire 8 N DATA1 [7:0] $end
$upscope $end
$scope module case3 $end
$var wire 8 O RESULT [7:0] $end
$var wire 8 P DATA2 [7:0] $end
$var wire 8 Q DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module flow $end
$var wire 1 : branch $end
$var wire 1 < jump $end
$var wire 1 ) out $end
$var wire 1 * zero $end
$upscope $end
$scope module mux1 $end
$var wire 1 = SELECT $end
$var wire 8 R IN2 [7:0] $end
$var wire 8 S IN1 [7:0] $end
$var reg 8 T OUT [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 U IN1 [7:0] $end
$var wire 8 V IN2 [7:0] $end
$var wire 1 ; SELECT $end
$var reg 8 W OUT [7:0] $end
$upscope $end
$scope module mux3 $end
$var wire 32 X IN1 [31:0] $end
$var wire 1 ) SELECT $end
$var wire 32 Y IN2 [31:0] $end
$var reg 32 Z OUT [31:0] $end
$upscope $end
$scope module reg_file1 $end
$var wire 1 # CLK $end
$var wire 8 [ IN [7:0] $end
$var wire 3 \ INADDRESS [2:0] $end
$var wire 8 ] OUT1 [7:0] $end
$var wire 3 ^ OUT1ADDRESS [2:0] $end
$var wire 8 _ OUT2 [7:0] $end
$var wire 3 ` OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 9 WRITE $end
$var integer 32 a i [31:0] $end
$upscope $end
$scope module target $end
$var wire 8 b Offset [7:0] $end
$var wire 32 c PC [31:0] $end
$var wire 22 d signBits [21:0] $end
$var wire 32 e Target [31:0] $end
$upscope $end
$scope module twocomp1 $end
$var wire 8 f IN [7:0] $end
$var wire 8 g OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
x=
x<
x;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
x)
bx (
bx '
bx &
bx %
1$
0#
bx "
bx !
$end
#4
b0 a
1#
#5
b0 2
b0 Z
b1 a
b0 8
b0 X
b0 c
b0 !
b0 7
0$
#6
b100 2
b100 Z
b100 8
b100 X
b100 c
b10 a
#7
b0 /
b0 ^
b101 .
b101 `
b100 +
b100 \
b0 d
b0 6
b101 3
b101 V
b100 1
b100 b
b11 a
b1000000000000000101 "
b1000000000000000101 %
#8
0)
b101 0
b101 ?
b101 G
b101 J
b101 M
b101 P
b101 W
0:
0<
19
0=
1;
b0 5
b0 >
b100 a
0#
#9
0*
b101 4
b101 E
b101 [
bx1x1 A
bx1x1 O
b0x0x B
b0x0x L
b101 D
b101 F
b101 a
b0 -
b0 @
b0 H
b0 K
b0 N
b0 Q
b0 ]
b10100 '
b10100 Y
b10100 e
#10
b101 A
b101 O
b0 B
b0 L
b110 a
#11
b111 a
b101 C
b101 I
#12
b0 &
b0 T
b0 U
b1000 a
b0 ,
b0 S
b0 _
b0 f
1#
#13
b0 (
b0 R
b0 g
b100 !
b100 7
#14
b1000 2
b1000 Z
b1000 8
b1000 X
b1000 c
#15
b1001 0
b1001 ?
b1001 G
b1001 J
b1001 M
b1001 P
b1001 W
b1 .
b1 `
b10 +
b10 \
b1001 3
b1001 V
b10 1
b10 b
b100000000000001001 "
b100000000000001001 %
#16
b1001 4
b1001 E
b1001 [
b1001 A
b1001 O
b1001 D
b1001 F
0#
#17
b1001 C
b1001 I
b10000 '
b10000 Y
b10000 e
#20
1#
#21
b1000 !
b1000 7
#22
b1100 2
b1100 Z
b1100 8
b1100 X
b1100 c
#23
b100 /
b100 ^
b10 0
b10 ?
b10 G
b10 J
b10 M
b10 P
b10 W
b10 .
b10 `
b110 +
b110 \
b10 6
b10 3
b10 V
b110 1
b110 b
b10000001100000010000000010 "
b10000001100000010000000010 %
#24
b0 0
b0 ?
b0 G
b0 J
b0 M
b0 P
b0 W
b10 A
b10 O
b10 D
b10 F
0;
b1 5
b1 >
0#
#25
b1001 0
b1001 ?
b1001 G
b1001 J
b1001 M
b1001 P
b1001 W
b1001 &
b1001 T
b1001 U
b0 A
b0 O
b0 D
b0 F
b1001 ,
b1001 S
b1001 _
b1001 f
b100100 '
b100100 Y
b100100 e
#26
b1001 A
b1001 O
b1001 D
b1001 F
b11110111 (
b11110111 R
b11110111 g
#28
1#
#29
b1100 !
b1100 7
#30
b10000 2
b10000 Z
b10000 8
b10000 X
b10000 c
#31
b0 /
b0 ^
b110 .
b110 `
b0 +
b0 \
b1 6
b110 3
b110 V
b0 1
b0 b
b1000000000000000000000110 "
b1000000000000000000000110 %
#32
b0 5
b0 >
0#
#33
b10000 '
b10000 Y
b10000 e
#36
1#
#37
b10000 !
b10000 7
#38
b10100 2
b10100 Z
b10100 8
b10100 X
b10100 c
#39
b1 .
b1 `
b1 +
b1 \
b0 6
b1 3
b1 V
b1 1
b1 b
b1001 -
b1001 @
b1001 H
b1001 K
b1001 N
b1001 Q
b1001 ]
b10000000000000001 "
b10000000000000001 %
#40
b1 0
b1 ?
b1 G
b1 J
b1 M
b1 P
b1 W
b1001 B
b1001 L
1;
0#
#41
b1 4
b1 E
b1 [
b0 &
b0 T
b0 U
b1 B
b1 L
b1 D
b1 F
b0 ,
b0 S
b0 _
b0 f
b11000 '
b11000 Y
b11000 e
#42
b0 (
b0 R
b0 g
b1010 C
b1010 I
#44
1#
#45
b10100 !
b10100 7
#46
b11000 2
b11000 Z
b11000 8
b11000 X
b11000 c
#47
b10 /
b10 ^
b10 +
b10 \
b10 6
b10 1
b10 b
b1 &
b1 T
b1 U
b10000000100000001000000001 "
b10000000100000001000000001 %
b1 ,
b1 S
b1 _
b1 f
#48
b1010 4
b1010 E
b1010 [
0;
b1 5
b1 >
b11111111 (
b11111111 R
b11111111 g
0#
#49
b100000 '
b100000 Y
b100000 e
#52
1#
#53
b11000 !
b11000 7
#54
b11100 2
b11100 Z
b11100 8
b11100 X
b11100 c
#55
b0 /
b0 ^
b0 .
b0 `
b11 +
b11 \
b1111111111111111111111 d
b110 6
b0 3
b0 V
b11111011 1
b11111011 b
b1010 -
b1010 @
b1010 H
b1010 K
b1010 N
b1010 Q
b1010 ]
b110111110110000000000000000 "
b110111110110000000000000000 %
#56
b100000 2
b100000 Z
1)
b1011 A
b1011 O
b0 B
b0 L
1<
09
0#
#57
b1001 0
b1001 ?
b1001 G
b1001 J
b1001 M
b1001 P
b1001 W
b1001 &
b1001 T
b1001 U
b1000 2
b1000 Z
b1011 4
b1011 E
b1011 [
b1001 -
b1001 @
b1001 H
b1001 K
b1001 N
b1001 Q
b1001 ]
b1001 ,
b1001 S
b1001 _
b1001 f
b1000 '
b1000 Y
b1000 e
b1011 C
b1011 I
#58
b1001 D
b1001 F
b1001 A
b1001 O
b1001 B
b1001 L
b11110111 (
b11110111 R
b11110111 g
#59
b10010 4
b10010 E
b10010 [
b10010 C
b10010 I
#60
1#
#61
b1000 !
b1000 7
#62
b100000 8
b100000 X
b100000 c
#63
b100 /
b100 ^
b10 .
b10 `
b110 +
b110 \
b0 d
b10 6
b10 3
b10 V
b110 1
b110 b
b10000001100000010000000010 "
b10000001100000010000000010 %
#64
b100000 2
b100000 Z
0)
0<
19
0#
#65
b1010 0
b1010 ?
b1010 G
b1010 J
b1010 M
b1010 P
b1010 W
b1010 &
b1010 T
b1010 U
b0 -
b0 @
b0 H
b0 K
b0 N
b0 Q
b0 ]
b1010 ,
b1010 S
b1010 _
b1010 f
b111000 '
b111000 Y
b111000 e
#66
b1010 A
b1010 O
b1010 D
b1010 F
b0 B
b0 L
b11110110 (
b11110110 R
b11110110 g
#67
b1010 4
b1010 E
b1010 [
b1010 C
b1010 I
#68
1#
#69
b100000 !
b100000 7
#70
b100100 2
b100100 Z
b100100 8
b100100 X
b100100 c
#71
bx /
bx ^
bx .
bx `
bx +
bx \
bx d
bx 6
bx 3
bx V
bx 1
bx b
bx "
bx %
#72
0#
#73
bx 0
bx ?
bx G
bx J
bx M
bx P
bx W
bx &
bx T
bx U
bx -
bx @
bx H
bx K
bx N
bx Q
bx ]
bx ,
bx S
bx _
bx f
bx '
bx Y
bx e
#74
bx D
bx F
bx A
bx O
bx B
bx L
bx (
bx R
bx g
#75
x*
bx 4
bx E
bx [
bx C
bx I
#76
1#
#77
b100100 !
b100100 7
#78
b101000 2
b101000 Z
b101000 8
b101000 X
b101000 c
#80
0#
#84
1#
#85
b101000 !
b101000 7
#86
b101100 2
b101100 Z
b101100 8
b101100 X
b101100 c
#88
0#
#92
1#
#93
b101100 !
b101100 7
#94
b110000 2
b110000 Z
b110000 8
b110000 X
b110000 c
#96
0#
#100
1#
#101
b110000 !
b110000 7
#102
b110100 2
b110100 Z
b110100 8
b110100 X
b110100 c
#104
0#
#108
1#
#109
b110100 !
b110100 7
#110
b111000 2
b111000 Z
b111000 8
b111000 X
b111000 c
#112
0#
#116
1#
#117
b111000 !
b111000 7
#118
b111100 2
b111100 Z
b111100 8
b111100 X
b111100 c
#120
0#
#124
1#
#125
b111100 !
b111100 7
#126
b1000000 2
b1000000 Z
b1000000 8
b1000000 X
b1000000 c
#128
0#
#132
1#
#133
b1000000 !
b1000000 7
#134
b1000100 2
b1000100 Z
b1000100 8
b1000100 X
b1000100 c
#136
0#
#140
1#
#141
b1000100 !
b1000100 7
#142
b1001000 2
b1001000 Z
b1001000 8
b1001000 X
b1001000 c
#144
0#
#148
1#
#149
b1001000 !
b1001000 7
#150
b1001100 2
b1001100 Z
b1001100 8
b1001100 X
b1001100 c
#152
0#
#155
