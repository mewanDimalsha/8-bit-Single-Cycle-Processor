$date
	Sun Jun 18 21:39:30 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module cpu_tb $end
$var wire 8 ! WRITEDATA [7:0] $end
$var wire 1 " WRITE $end
$var wire 8 # READDATA [7:0] $end
$var wire 1 $ READ $end
$var wire 32 % PC [31:0] $end
$var wire 1 & MEM_WRITE $end
$var wire 1 ' MEM_READ $end
$var wire 32 ( MEM_OUT [31:0] $end
$var wire 32 ) MEM_IN [31:0] $end
$var wire 1 * MEM_BUSYWAIT $end
$var wire 6 + MEM_ADDRESS [5:0] $end
$var wire 32 , INSTRUCTION [31:0] $end
$var wire 1 - BUSYWAIT $end
$var wire 8 . ADDRESS [7:0] $end
$var reg 1 / CLK $end
$var reg 1 0 RESET $end
$scope module mycache $end
$var wire 1 / clk $end
$var wire 1 0 reset $end
$var wire 8 1 writedata [7:0] $end
$var wire 1 " write $end
$var wire 3 2 tag [2:0] $end
$var wire 1 $ read $end
$var wire 2 3 offset [1:0] $end
$var wire 32 4 mem_readdata [31:0] $end
$var wire 1 * mem_busywait $end
$var wire 3 5 index [2:0] $end
$var wire 8 6 address [7:0] $end
$var reg 1 - busywait $end
$var reg 1 7 checkhit $end
$var reg 1 8 dirty $end
$var reg 8 9 dirtybits [7:0] $end
$var reg 1 : hit $end
$var reg 6 ; mem_address [5:0] $end
$var reg 1 ' mem_read $end
$var reg 1 & mem_write $end
$var reg 32 < mem_writedata [31:0] $end
$var reg 3 = next_state [2:0] $end
$var reg 8 > readdata [7:0] $end
$var reg 1 ? readfromcache $end
$var reg 3 @ state [2:0] $end
$var reg 3 A tag_of_block [2:0] $end
$var reg 1 B update $end
$var reg 1 C valid $end
$var reg 8 D validbits [7:0] $end
$var reg 1 E writetocache $end
$upscope $end
$scope module mycpu $end
$var wire 8 F ADDRESS [7:0] $end
$var wire 1 - BUSYWAIT $end
$var wire 1 / CLK $end
$var wire 32 G INSTRUCTION [31:0] $end
$var wire 8 H OFFSET [7:0] $end
$var wire 8 I READDATA [7:0] $end
$var wire 1 0 RESET $end
$var wire 8 J WRITEDATA [7:0] $end
$var wire 8 K registerOp [7:0] $end
$var wire 8 L out_multi [7:0] $end
$var wire 32 M offset_out [31:0] $end
$var wire 8 N negatedOp [7:0] $end
$var wire 8 O in2_multi [7:0] $end
$var wire 8 P in1_multi [7:0] $end
$var wire 1 Q flow_out $end
$var wire 1 R ZERO $end
$var wire 3 S WRITEREG [2:0] $end
$var wire 4 T Shift [3:0] $end
$var wire 8 U REGOUT2 [7:0] $end
$var wire 8 V REGOUT1 [7:0] $end
$var wire 3 W READREG2 [2:0] $end
$var wire 3 X READREG1 [2:0] $end
$var wire 8 Y OPERAND2 [7:0] $end
$var wire 32 Z NewPC [31:0] $end
$var wire 8 [ MUX5 [7:0] $end
$var wire 8 \ IMMEDIATE [7:0] $end
$var wire 8 ] ALURESULT [7:0] $end
$var reg 3 ^ ALUOP [2:0] $end
$var reg 8 _ OPCODE [7:0] $end
$var reg 32 ` PC [31:0] $end
$var reg 32 a PCreg [31:0] $end
$var reg 1 $ READMEM $end
$var reg 1 b SEL_MUX4 $end
$var reg 1 c Shift_Choice $end
$var reg 1 d WRITEENABLE $end
$var reg 1 " WRITEMEM $end
$var reg 2 e bj [1:0] $end
$var reg 1 f immSelect $end
$var reg 1 g signSelect $end
$scope module MUX4 $end
$var wire 32 h IN1 [31:0] $end
$var wire 1 Q SELECT $end
$var wire 32 i IN2 [31:0] $end
$var reg 32 j OUT [31:0] $end
$upscope $end
$scope module alu1 $end
$var wire 1 c CHOICE $end
$var wire 3 k SELECT [2:0] $end
$var wire 4 l SHIFT [3:0] $end
$var wire 1 R ZERO $end
$var wire 8 m DATA2 [7:0] $end
$var wire 8 n DATA1 [7:0] $end
$var wire 8 o C7 [7:0] $end
$var wire 8 p C6 [7:0] $end
$var wire 8 q C5 [7:0] $end
$var wire 8 r C4 [7:0] $end
$var wire 8 s C3 [7:0] $end
$var wire 8 t C2 [7:0] $end
$var wire 8 u C1 [7:0] $end
$var wire 8 v C0 [7:0] $end
$var reg 8 w RESULT [7:0] $end
$scope module case0 $end
$var wire 8 x RESULT [7:0] $end
$var wire 8 y DATA2 [7:0] $end
$var wire 8 z DATA1 [7:0] $end
$upscope $end
$scope module case1 $end
$var wire 8 { RESULT [7:0] $end
$var wire 8 | DATA2 [7:0] $end
$var wire 8 } DATA1 [7:0] $end
$upscope $end
$scope module case2 $end
$var wire 8 ~ RESULT [7:0] $end
$var wire 8 !" DATA2 [7:0] $end
$var wire 8 "" DATA1 [7:0] $end
$upscope $end
$scope module case3 $end
$var wire 8 #" RESULT [7:0] $end
$var wire 8 $" DATA2 [7:0] $end
$var wire 8 %" DATA1 [7:0] $end
$upscope $end
$scope module case4 $end
$var wire 8 &" New_Num [7:0] $end
$var wire 8 '" IN2 [7:0] $end
$var wire 8 (" IN1 [7:0] $end
$var reg 8 )" sum [7:0] $end
$upscope $end
$scope module case5 $end
$var wire 8 *" Out_num [7:0] $end
$var wire 4 +" SHIFT [3:0] $end
$var wire 8 ," Number [7:0] $end
$var reg 8 -" New_Num [7:0] $end
$upscope $end
$scope module case6 $end
$var wire 8 ." Out_num [7:0] $end
$var wire 4 /" SHIFT [3:0] $end
$var wire 8 0" Number [7:0] $end
$var reg 8 1" New_Num [7:0] $end
$upscope $end
$scope module case7 $end
$var wire 1 c Chocie $end
$var wire 8 2" Out_num [7:0] $end
$var wire 4 3" SHIFT [3:0] $end
$var wire 8 4" Number [7:0] $end
$var reg 8 5" New_Num [7:0] $end
$upscope $end
$upscope $end
$scope module flow $end
$var wire 2 6" branch_jump [1:0] $end
$var wire 1 Q out $end
$var wire 1 R zero $end
$upscope $end
$scope module mult $end
$var wire 8 7" IN1 [7:0] $end
$var wire 8 8" IN2 [7:0] $end
$var wire 8 9" New_Num [7:0] $end
$var reg 8 :" sum [7:0] $end
$upscope $end
$scope module mux1 $end
$var wire 1 g SELECT $end
$var wire 8 ;" IN2 [7:0] $end
$var wire 8 <" IN1 [7:0] $end
$var reg 8 =" OUT [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 >" IN1 [7:0] $end
$var wire 8 ?" IN2 [7:0] $end
$var wire 1 f SELECT $end
$var reg 8 @" OUT [7:0] $end
$upscope $end
$scope module mux4 $end
$var wire 8 A" IN1 [7:0] $end
$var wire 8 B" IN2 [7:0] $end
$var wire 1 b SELECT $end
$var reg 8 C" OUT [7:0] $end
$upscope $end
$scope module reg_file1 $end
$var wire 1 - BUSYWAIT $end
$var wire 1 / CLK $end
$var wire 8 D" IN [7:0] $end
$var wire 3 E" INADDRESS [2:0] $end
$var wire 8 F" OUT1 [7:0] $end
$var wire 3 G" OUT1ADDRESS [2:0] $end
$var wire 8 H" OUT2 [7:0] $end
$var wire 3 I" OUT2ADDRESS [2:0] $end
$var wire 1 0 RESET $end
$var wire 1 d WRITE $end
$var integer 32 J" i [31:0] $end
$upscope $end
$scope module target $end
$var wire 8 K" Offset [7:0] $end
$var wire 32 L" PC [31:0] $end
$var wire 22 M" signBits [21:0] $end
$var wire 32 N" Target [31:0] $end
$upscope $end
$scope module twocomp1 $end
$var wire 8 O" IN [7:0] $end
$var wire 8 P" OUT [7:0] $end
$upscope $end
$upscope $end
$scope module mymemory $end
$var wire 6 Q" address [5:0] $end
$var wire 1 / clock $end
$var wire 1 ' read $end
$var wire 1 0 reset $end
$var wire 1 & write $end
$var wire 32 R" writedata [31:0] $end
$var reg 1 * busywait $end
$var reg 1 S" readaccess $end
$var reg 32 T" readdata [31:0] $end
$var reg 1 U" writeaccess $end
$var integer 32 V" i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000 V"
0U"
bx T"
0S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bz M"
bx L"
bz K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
xg
xf
bx e
xd
0c
0b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
xR
xQ
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bz H
bx G
bx F
xE
b0 D
xC
0B
bx A
b0 @
x?
bx >
b0 =
bx <
bx ;
x:
b0 9
x8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
10
0/
bx .
0-
bx ,
bx +
0*
bx )
bx (
0'
0&
bx %
0$
bx #
0"
bx !
$end
#40
b0 J"
1/
#50
b0 Z
b0 j
b1 J"
b0 a
b0 h
b0 L"
b0 %
b0 `
00
#60
b100 Z
b100 j
b100 a
b100 h
b100 L"
b10 J"
#70
b0 X
b0 G"
b1 W
b1 I"
b0 S
b0 E"
b1001 T
b1001 l
b1001 +"
b1001 /"
b1001 3"
b0 _
b1001 \
b1001 ?"
b1001 O
b1001 8"
b0 P
b0 7"
b11 J"
b1001 ,
b1001 G
#80
0Q
b1001 Y
b1001 m
b1001 y
b1001 |
b1001 !"
b1001 $"
b1001 '"
b1001 @"
b0 p
b0 ."
b0 1"
b0 o
b0 2"
b0 5"
b0 e
b0 6"
1d
0g
1f
b0 ^
b0 k
b100 J"
0/
#90
0R
07
b1001 [
b1001 C"
b1 3
b10 5
b0 2
b1001 .
b1001 6
b1001 F
b1001 ]
b1001 w
b1001 A"
b1001 D"
b0 K
b0 ="
b0 >"
bx1xx1 s
bx1xx1 #"
b0x00x t
b0x00x ~
b1001 v
b1001 x
b101 J"
b0 !
b0 1
b0 J
b0 V
b0 n
b0 z
b0 }
b0 ""
b0 %"
b0 ("
b0 ,"
b0 0"
b0 4"
b0 F"
b0 U
b0 <"
b0 H"
b0 O"
b0 L
b0 9"
b0 :"
#100
b1001 s
b1001 #"
b0 t
b0 ~
b0 q
b0 *"
b0 -"
b0 N
b0 ;"
b0 P"
b110 J"
b0 r
b0 &"
b0 )"
#110
b111 J"
b1001 u
b1001 {
#120
b1000 J"
1/
#130
b100 %
b100 `
#140
b1000 Z
b1000 j
b1000 a
b1000 h
b1000 L"
#150
b1 Y
b1 m
b1 y
b1 |
b1 !"
b1 $"
b1 '"
b1 @"
b1 S
b1 E"
b1 T
b1 l
b1 +"
b1 /"
b1 3"
b1 \
b1 ?"
b1 O
b1 8"
b10000000000000001 ,
b10000000000000001 G
#160
b1 [
b1 C"
b0 5
b1 .
b1 6
b1 F
b1 ]
b1 w
b1 A"
b1 D"
b1 s
b1 #"
b1 v
b1 x
0/
#170
b1 u
b1 {
#200
1/
#210
b1000 %
b1000 `
#220
b1100 Z
b1100 j
b1100 a
b1100 h
b1100 L"
#230
b0 S
b0 E"
b1 K
b1 ="
b1 >"
b10000 _
b1 U
b1 <"
b1 H"
b1 O"
b10000000000000000000000000001 ,
b10000000000000000000000000001 G
#240
1-
b11111111 N
b11111111 ;"
b11111111 P"
1"
0f
0/
#250
1E
0?
#260
07
08
0C
#269
1S"
1*
b1 =
b0 +
b0 ;
b0 Q"
1'
0:
#280
1B
b1 @
1/
#320
0/
#360
1/
#400
0/
#440
1/
#480
0/
#520
1/
#560
0/
#600
1/
#640
0/
#680
1/
bx00000000 (
bx00000000 4
bx00000000 T"
#720
0/
#760
1/
#800
0/
#840
1/
#880
0/
#920
1/
#960
0/
#1000
1/
#1040
0/
#1080
1/
bx0000000000000000 (
bx0000000000000000 4
bx0000000000000000 T"
#1120
0/
#1160
1/
#1200
0/
#1240
1/
#1280
0/
#1320
1/
#1360
0/
#1400
1/
#1440
0/
#1480
1/
bx000000000000000000000000 (
bx000000000000000000000000 4
bx000000000000000000000000 T"
#1520
0/
#1560
1/
#1600
0/
#1640
1/
#1680
0/
#1720
1/
#1760
0/
#1800
1/
#1840
0/
#1880
b1 D
0"
0B
0-
bx +
bx ;
bx Q"
0'
b0 @
b0 =
1/
0S"
0*
b0 (
b0 4
b0 T"
#1890
07
1C
b0 A
b0 #
b0 >
b0 I
b0 B"
#1899
1:
#1920
0/
#1960
b1 9
0E
1/
#1970
b1100 %
b1100 `
#1980
b10000 Z
b10000 j
b10000 a
b10000 h
b10000 L"
#1990
b1 X
b1 G"
b0 W
b0 I"
b0 T
b0 l
b0 +"
b0 /"
b0 3"
b10001 _
b0 \
b0 ?"
b0 O
b0 8"
b1 P
b1 7"
b1 !
b1 1
b1 J
b1 V
b1 n
b1 z
b1 }
b1 ""
b1 %"
b1 ("
b1 ,"
b1 0"
b1 4"
b1 F"
b10001000000000000000100000000 ,
b10001000000000000000100000000 G
#2000
1-
b0 Y
b0 m
b0 y
b0 |
b0 !"
b0 $"
b0 '"
b0 @"
b1 t
b1 ~
b1 q
b1 *"
b1 -"
b1 p
b1 ."
b1 1"
b1 o
b1 2"
b1 5"
1"
1f
0/
#2010
1R
b0 [
b0 C"
b0 3
b0 .
b0 6
b0 F
b0 ]
b0 w
b0 A"
b0 D"
b0 t
b0 ~
1E
b0 v
b0 x
#2020
07
18
#2029
0"
0-
#2040
0E
1/
#2050
b1 #
b1 >
b1 I
b1 B"
b10000 %
b10000 `
#2060
b10100 Z
b10100 j
b10100 a
b10100 h
b10100 L"
#2070
b0 X
b0 G"
b1 W
b1 I"
b10 S
b10 E"
b1 T
b1 l
b1 +"
b1 /"
b1 3"
b1 Y
b1 m
b1 y
b1 |
b1 !"
b1 $"
b1 '"
b1 @"
b1110 _
b1 \
b1 ?"
b1 O
b1 8"
b0 P
b0 7"
b0 K
b0 ="
b0 >"
b1110000000100000000000000001 ,
b1110000000100000000000000001 G
b0 U
b0 <"
b0 H"
b0 O"
#2080
0R
b1 3
b1 .
b1 6
b1 F
b1 ]
b1 w
b1 A"
b1 D"
b1 [
b1 C"
1-
b0 Y
b0 m
b0 y
b0 |
b0 !"
b0 $"
b0 '"
b0 @"
b0 q
b0 *"
b0 -"
b10000000 p
b10000000 ."
b10000000 1"
b10 o
b10 2"
b10 5"
b1 t
b1 ~
b1 v
b1 x
1b
1$
0f
b0 N
b0 ;"
b0 P"
0/
#2090
1R
b0 3
b1 Y
b1 m
b1 y
b1 |
b1 !"
b1 $"
b1 '"
b1 @"
b0 [
b0 C"
b0 .
b0 6
b0 F
b0 ]
b0 w
b0 A"
b0 D"
b1 K
b1 ="
b1 >"
b0 #
b0 >
b0 I
b0 B"
b0 t
b0 ~
1?
b0 v
b0 x
b0 !
b0 1
b0 J
b0 V
b0 n
b0 z
b0 }
b0 ""
b0 %"
b0 ("
b0 ,"
b0 0"
b0 4"
b0 F"
b1 U
b1 <"
b1 H"
b1 O"
#2100
0R
b1 3
b1 [
b1 C"
b1 .
b1 6
b1 F
b1 ]
b1 w
b1 A"
b1 D"
b1 #
b1 >
b1 I
b1 B"
b1 v
b1 x
07
b0 p
b0 ."
b0 1"
b0 o
b0 2"
b0 5"
b11111111 N
b11111111 ;"
b11111111 P"
#2109
0$
0?
0-
#2110
b0 [
b0 C"
b0 #
b0 >
b0 I
b0 B"
#2120
1/
#2130
b10100 %
b10100 `
#2140
b11000 Z
b11000 j
b11000 a
b11000 h
b11000 L"
#2150
b11 S
b11 E"
b1110000000110000000000000001 ,
b1110000000110000000000000001 G
#2160
1-
1$
0/
#2170
1?
#2180
07
#2189
0$
0?
0-
#2200
1/
#2210
b11000 %
b11000 `
#2220
b11100 Z
b11100 j
b11100 a
b11100 h
b11100 L"
#2230
b100 X
b100 G"
b111 W
b111 I"
b0 S
b0 E"
b111 T
b111 l
b111 +"
b111 /"
b111 3"
b10001 _
b111 \
b111 ?"
b111 O
b111 8"
b100 P
b100 7"
b10001000000000000010000000111 ,
b10001000000000000010000000111 G
#2240
b1 [
b1 C"
1-
b111 Y
b111 m
b111 y
b111 |
b111 !"
b111 $"
b111 '"
b111 @"
0b
1"
1f
0/
#2250
0"
0-
b111 [
b111 C"
b11 3
b1 5
b111 .
b111 6
b111 F
b111 ]
b111 w
b111 A"
b111 D"
b0 K
b0 ="
b0 >"
b111 s
b111 #"
1E
b111 v
b111 x
b0 U
b0 <"
b0 H"
b0 O"
b11100 L
b11100 9"
b11100 :"
#2260
bx #
bx >
bx I
bx B"
07
08
0C
bx A
b0 N
b0 ;"
b0 P"
b111 u
b111 {
#2269
1S"
1*
b1 +
b1 ;
b1 Q"
1'
0:
#2280
1/
#2290
b11100 %
b11100 `
#2300
b100000 Z
b100000 j
b100000 a
b100000 h
b100000 L"
#2310
b0 X
b0 G"
b101 S
b101 E"
b1111 _
b0 P
b0 7"
b1111000001010000000000000111 ,
b1111000001010000000000000111 G
#2320
bx [
bx C"
b1 =
1-
1b
1$
0/
#2330
0E
1?
b111 !
b111 1
b111 J
b111 V
b111 n
b111 z
b111 }
b111 ""
b111 %"
b111 ("
b111 ,"
b111 0"
b111 4"
b111 F"
b0 L
b0 9"
b0 :"
#2340
07
b111 t
b111 ~
b1110 p
b1110 ."
b1110 1"
b10000000 o
b10000000 2"
b10000000 5"
#2350
b110001 r
b110001 &"
b110001 )"
b1110 u
b1110 {
#2360
1B
b1 @
1/
#2400
0/
#2440
1/
#2480
0/
#2520
1/
#2560
0/
#2600
1/
#2640
0/
#2680
1/
#2720
0/
#2760
1/
#2800
0/
#2840
1/
#2880
0/
#2920
1/
#2960
0/
#3000
1/
#3040
0/
#3080
1/
#3120
0/
#3160
1/
#3200
0/
#3240
1/
#3280
0/
#3320
1/
#3360
0/
#3400
1/
#3440
0/
#3480
1/
#3520
0/
#3560
1/
#3600
0/
#3640
1/
#3680
0/
#3720
1/
#3760
0/
#3800
1/
#3840
0/
#3880
b11 D
0$
0B
0-
bx +
bx ;
bx Q"
0'
b0 @
b0 =
1/
0S"
0*
#3890
b0 [
b0 C"
07
1C
b0 A
b0 #
b0 >
b0 I
b0 B"
#3899
0?
1:
#3920
0/
#3960
1/
#3970
b100000 %
b100000 `
#3980
b100100 Z
b100100 j
b100100 a
b100100 h
b100100 L"
#3990
bx X
bx G"
bx Y
bx m
bx y
bx |
bx !"
bx $"
bx '"
bx @"
bx W
bx I"
bx S
bx E"
bx T
bx l
bx +"
bx /"
bx 3"
bx _
bx \
bx ?"
bx O
bx 8"
bx P
bx 7"
bx ,
bx G
#4000
xR
bx 3
bx 5
bx 2
bx .
bx 6
bx F
bx ]
bx w
bx A"
bx D"
bx111 s
bx111 #"
b0xxx t
b0xxx ~
b0 p
b0 ."
b0 1"
b0 o
b0 2"
b0 5"
bx v
bx x
0/
#4010
bx K
bx ="
bx >"
bx r
bx &"
bx )"
bx !
bx 1
bx J
bx V
bx n
bx z
bx }
bx ""
bx %"
bx ("
bx ,"
bx 0"
bx 4"
bx F"
bx u
bx {
bx U
bx <"
bx H"
bx O"
bx L
bx 9"
bx :"
#4020
bx s
bx #"
bx t
bx ~
bx q
bx *"
bx -"
bx N
bx ;"
bx P"
#4040
1/
#4050
b100100 %
b100100 `
